{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)6da30b86-14a4-4bce-bf5d-2bee212317e2","ParentGuid":"(Guid)7d694963-c4d1-4352-8594-a20401544c44","Name":"(string)SBV","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//INFO, COPYRIGHT MANGOIPA GROUP INC\n//SBV function block\n\n\n\n//Populate Temporaries and preset outputs\n\n\ttbXGH \t:= XGH;\n    tbXGL \t:= XGL;    \n    tbXH\t:= XH;            \n    tbXL\t:= XL;   \n\ttbXOH\t:= XOH;     \n\ttbXOL\t:= XOL;           \n\ttbXF\t:= XF;            \n\ttbLSH\t:= LSH;           \n\ttbLSL\t:= LSL;           \n\ttbFSH\t:= FSH;           \n    tbFSL\t:= FSL;            \n    tbFDH\t:= FDH;            \n    tbFDL\t:= FDL;            \n\ttbFB\t:= FB;            \n\ttbFU\t:= FU;            \n\ttbLA\t:= LA;              \n\ttbLM\t:= LM;             \n\ttbLO\t:= LO;       \n\n// Timers\n\nTimerTransLow();\nTimerTransHigh();\nTimerFeedbackLow();\nTimerFeedbackHigh();\nOutputPulsHigh();\nOutputPulsLow();\n\nTimerTransLow.PTDH\t\t:= PTDH;\nTimerTransHigh.PTDH \t:= PTDL;\nTimerFeedbackLow.PTDH\t:= PFFD;\nTimerFeedbackHigh.PTDH\t:= PFFD;\nOutputPulsHigh.PT\t\t:= PTTO;\nOutputPulsLow.PT\t\t:= PTTC;\n\n// Handle external faults, subject to supression\nIF (tbXF AND NOT tbFU) THEN\n\ttiYFI := ciExternalFault;\nEND_IF\n\n\n// Handle High output puls YH\nIF NOT (siState = ciTransitHigh) THEN\n\tOutputPulsHigh.IN := FALSE;\nEND_IF\n\n// Handle Low output puls YL\nIF NOT (siState = ciTransitLow) THEN\n\tOutputPulsLow.IN := FALSE;\nEND_IF\n\n// Handle lock safeguard mode\nIF (tbLSL AND NOT tbFB) THEN\n\tsbBA \t\t\t:= FALSE;\t\t// Set mode to manual\nELSIF (tbLSH AND NOT tbFB) THEN\n\tsbBA \t\t\t:= FALSE;\t\t// Set mode to manual\nEND_IF\n\n\n//Mode Control\nIF tbLM AND NOT sbLM  THEN\n    sbBA                        := FALSE;\t// Manual mode, BA = 0\nELSIF tbLA AND NOT sbLA THEN\n    sbBA                        := TRUE; \t// Auto mode posetive edge,\tBA = 1\nEND_IF;\n\n\n// Retrigger posetive edge\nsbLA := tbLA;\nsbLM := tbLM;\n\n// Outside mode / Local mode.\nIF tbLO THEN\t\t\n\ttbBO := TRUE;\n\tsbBA := FALSE;\n\t\n\tCASE PSLO OF\n\tciModeLocal\t\t\t\t: \n\t\ttbOutsideLocal := TRUE;\n\t\tIF tbXGH THEN\n\t\t\tsiState := ciHigh;\n\t\tELSIF tbXGL THEN\t\t\t\n\t\t\tsiState := ciLow;\n\t\tEND_IF\n\t\t\t\t\n\n\tciModeOutside\t\t\t: \n\ttbOutsideLocal := FALSE;\n\t//\n\tEND_CASE\nELSE\n\ttbBO := FALSE;\nEND_IF\t\n\n\n\n\n// Handling safeguarding BS status\nIF (tbLSH OR tbLSL OR tbFSH OR tbFSL) THEN\n\ttbBS := TRUE;\nELSE\n\ttbBS := FALSE;\nEND_IF\n\n// Handling blocking BB status\nIF (tbFB OR OS_FB) THEN\n\ttbBB := TRUE;\nELSE\n\ttbBB := FALSE;\nEND_IF\n\n//Blocking blocks safeguard and disable transition modes\nIF tbBB THEN\n\ttbLSL := FALSE;\n\ttbLSH := FALSE;\n\ttbFSL := FALSE;\n\ttbFSH := FALSE;\n\ttbFDH := FALSE;\n\ttbFDL := FALSE;\nEND_IF\n\n// Handling supression BU status ON/OFF\nIF (tbFU OR OS_FU) THEN\n\ttbBU  \t:= TRUE;\t\nELSE\n\ttbBU \t:= FALSE;\nEND_IF\n\n// stores PFT before supression sets to \"no feedback\" on posetive edge\nIF tbBU AND NOT sbBUpos THEN\n\tsiFBlastvalue \t:= PFT;\n\tPFT\t\t\t\t:= ciNoFeedback;\nEND_IF\n\n// sets PFT to last value on negative edge\nIF NOT tbBU AND sbBUneg THEN\n\tPFT \t:= siFBlastValue;\nEND_IF\n\n\n// Posetive edge retrigger\nsbBUpos := tbBU;\n\n// Negative edge retrigger\nsbBUneg := NOT tbBU;\n\n\n//High and low commands evaluation (AUTO & MANUAL & OUTSIDE & LSL & LSH FDL & FDH\ntbLowCommand                  := (tbXL AND sbBA) OR \t\t\t\t\t\t\t\t\t\t// Auto \n\t\t\t\t\t\t\t\t (OS_XLM AND NOT sbBA AND NOT tbBO) OR \t\t\t\t\t\t// Manuell (Triggered by XLM supressed by Auto & Outside mode)\n\t\t\t\t\t\t\t\t (tbBO AND tbXOL AND NOT tbOutsideLocal) OR \t\t\t\t// Outside (Triggered by XOL if in not local outside mode)\t\n\t\t\t\t\t\t\t\t (tbLSL AND NOT tbFB) OR\t\t\t\t\t\t\t\t\t// Lock Safeguard Low subject by blocking\n\t\t\t\t\t\t\t\t (tbFSL AND NOT tbFB);\t\t\t\t\t\t\t\t\t\t// Force safeguard Low subject by blocking\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t \ntbHighCommand                 := (tbXH AND sbBA) OR \t\t\t\t\t\t\t\t\t\t// Auto\n\t\t\t\t\t\t\t\t (OS_XHM AND NOT sbBA AND NOT tbBO AND NOT tbBS) OR \t\t// Manuell (Triggered by XLM supressed by Auto & Outside mode\n\t\t\t\t\t\t\t\t (tbBO AND tbXOH AND NOT tbOutsideLocal) OR \t\t\t\t// Outside (Triggered by XOL if in not local outside mode)\n\t\t\t\t\t\t\t\t (tbLSH AND NOT tbFB) OR\t\t\t\t\t\t\t\t\t// Lock Safeguard Low subject by blocking\n\t\t\t\t\t\t\t\t (tbFSH AND NOT tbFB);\t\t\t\t\t\t\t\t\t\t// Force safeguard Low subject by blocking\n\t\t\t\t\t\t\t\t\t\t\t//FDH\n\n// Handle force disable high command\nIF tbFDH AND NOT tbFB THEN\n    tbHighCommand             := FALSE;   //If FDH is true then erase high command, prevent transit to high\nEND_IF;\n\n// Handle force disable low command\nIF tbFDL AND NOT tbFB THEN\n    tbLowCommand              := FALSE;   //If FDL is true then erase low command, prevent transit to low\nEND_IF;\n\n// Handle Force safeguard commands\nIF tbFSL THEN\n    tbHighCommand             := FALSE;\n    tbLowCommand              := NOT tbXGL;    //As long as FSL is true and not correct feedback, force transit to low\n\t\n\t// I manuell skal den ha Y = 0 (lukka) etter FSL er ute. (Høgkant OS_XLH?)\nELSIF tbFSH THEN\n    tbHighCommand             := NOT tbXGH;    //As long as FSH is true and not correct feedback, force transit to high\n    tbLowCommand              := FALSE;\n\t\n\t// I manuell skal den ha Y = 1 (lukka) etter FSL er ute.\nEnd_If;\n\n// Handle parameter action on fault\nIF sbYF THEN\n\tCASE PAOF OF \n\t\tciNoAction:\n\t\t\t// No action on fault\n\t\t\tsbYF := sbYF;\t\t\n\t\tciClose:\n\t\t\ttbLowCommand := TRUE;\t\t\n\t\tciOpen:\n\t\t\ttbHighCommand := TRUE;\t\t\n\tEND_CASE\t\nEND_IF\n\n\n// Handle parameter feedbacks\nCASE PFT OF\n\tciNoFeedback:\n\t\ttbXGH := (siState = ciHigh) OR (siState = ciTransitHigh);\n\t\ttbXGL := (siState = ciLOW) OR (siState = ciTransitlow);\n\tciHighFeedback:\n\t\ttbXGL := (siState = ciLOW) OR (siState = ciTransitlow);\n\tciLowFeedback:\n\t\ttbXGH := (siState = ciHigh) OR (siState = ciTransitHigh);\n\tciFullFeedback:\n\t\ttbXGH := tbXGH;\n\t\ttbXGL := tbXGL;\nEND_CASE;\n\n\n\n//Determine next state\nIF tbHighCommand THEN\n    siNextState              \t\t := ciHigh;\nELSIF tbLowCommand THEN\n    siNextState              \t\t := ciLow;\nEnd_If;\n\n\n//Tilstandsmaskin \nCASE siState OF \n\tciInitState:\t\t\t\t\t\t//Starttilstand, finner riktig tilstand.\n\t//Init setup før oppstart \n\tCASE PSUM OF\t\t\t\t\t\t//Sets the mode of the block at startup\n\t\t\tciModeStartupManual\t\t: \n\t\t\t\tsbBA := FALSE;\t\t\t\t\t\t\t\n\t\t\tciModeStartupAuto\t\t: \n\t\t\t\tsbBA := TRUE;\t\t\t\n\t\t\tciModeStartupPrev\t\t: \n\t\t\t\tsbBA := sbBA;\n\tEND_CASE\n\t\n\tCASE PSUS OF\t\t\t\t\t\t//Sets the state of the block\n\t\tciStartupClosed\t\t:  \n\t\t\tsiState := ciLow;\n\t\tciStartupOpen\t\t:  \n\t\t\tsiState := ciHigh;\n\t\tciStartupFeedback\t:  \t\n\t\t\tIF tbXGH THEN\n\t\t\t\tsiState := ciHigh;\n\t\t\tELSIF XGL THEN\n\t\t\t\tsiState := ciLow;\t\t\n\t\t\tEND_IF\n\tEND_CASE\n\t\n\n\t\t\n\t\tCASE siNextState OF\n\t\t\tciHigh: siState\t\t\t := ciTransitHigh;\n\t\t\tciLow :\tsiState \t\t := ciTransitLow;\t\t\n\t\tEND_CASE\t\n\t\n\tciLow:\n\t\n\t//Feilhandtering om en ikkje har noen tilbakemelding \n\t    IF (NOT tbXGL OR tbXGH) THEN\n\t\t\t\n\t\t    TimerFeedbackLow.X := TRUE;\t\n            IF TimerFeedbackLow.Y THEN\n                tiYFI           \t:= ciFeedbackFaultLow;\n            END_IF;\n        ELSE\n            TimerFeedbackLow.X := FALSE;\n        End_If;\n\n        CASE siNextState OF\n            ciHigh :                \n                siState      \t\t := ciTransitHigh;\n        END_CASE;\n\t\t\n\tciTransitHigh:\n\t\t\n\t\tTimerTransHigh.X \t\t\t:= TRUE;\n\t\t\n\t\tOutputPulsHigh.IN \t\t\t:= TRUE;\n\t\t\t\t\n\t\tIF tbXGH THEN\n\t\t\tTimerTransHigh.X \t\t:= FALSE;\n\t\t\tsiState           \t\t:= ciHigh;\n\t\tEND_IF\n\t\t\t\n\n\t\tIF (TimerTransHigh.Y) THEN\n\t\t\ttiYFI\t:= ciTransitHighFault;\n\t\tEND_IF\n\t\t\n\t\tCASE siNextState OF\n            ciLow :                \n                siState     \t\t   := ciTransitLow;\n        End_Case;\n\t\t\n\tciHigh:\n\t\n\t//Feilhandtering om en ikkje har noen tilbakemelding \n\t    IF (NOT tbXGH OR tbXGL) THEN\n\t\t\t\n            TimerFeedbackHigh.X := TRUE;\t\n            IF TimerFeedbackHigh.Y THEN\n                tiYFI           \t:= ciFeedbackFaultHigh;\n            END_IF;\n        ELSE\n            TimerFeedbackHigh.X \t:= FALSE;\n        End_If;\n\t\t\n        CASE siNextState OF\n            ciLow :\n                siState       \t\t  := ciTransitLow;\n        End_Case;\n\t\n\tciTransitLow:\n\t\n\t\tTimerTransLow.X \t\t\t:= TRUE;\t\t\n\t\tOutputPulsLow.IN \t\t\t:= TRUE;\t\t\n\t\n\t\tIF tbXGL THEN\n\t\t\tTimerTransLow.X \t\t:= FALSE;\n\t\t\tsiState          \t\t:= ciLOW;\n\t\tEND_IF\n\t\t\n\t\t\tIF (TimerTransLow.Y) THEN\n\t\t\t\ttiYFI\t:= ciTransitLowFault;\n\t\t\tEND_IF\n\t\t\n\t\tCASE siNextState OF\n            ciHigh :                \n                siState      \t\t  := ciTransitHigh;\n        End_Case;\t\n\nEND_CASE\n\n\n// FAULT \nsbYF := (tiYFI > ciNoFault);\n\n//Handle supression \nIF tbBU THEN\n\tsbYF := FALSE;\nEND_IF\n\n\n//Write to output //TATT FRA OLAV DIREKTE\nY\t\t\t\t\t\t\t\t\t\t:= \t(siState = ciTransitHigh) OR ((siState = ciHigh));\nYH                            \t\t\t:=\tOutputPulsHigh.Q OR (PSTO AND (siState = ciTransitHigh)) ;\nYL                           \t\t\t:= \tOutputPulsLow.Q OR (PSTO AND (siState = ciTransitLow)) ;\nBA\t\t\t\t\t\t\t\t\t\t:= \tsbBA;\nBU\t\t\t\t\t\t\t\t\t\t:=  tbBU;\nYF                           \t\t\t:= \t(sbYF);\nYFI\t\t\t\t\t\t\t\t\t\t:=  tiYFI;\nBCH                          \t\t\t:= \t(siState = ciHigh) AND tbXGH AND NOT tbXGL;\nBCL                         \t\t\t:= \t(siState = ciLow) AND tbXGL AND NOT tbXGH;\nBS\t\t\t\t\t\t\t\t\t\t:=  tbBS;\n\n//Write to HMI\n","LineInfoPersistence":"(string)6da30b86-14a4-4bce-bf5d-2bee212317e2_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK SBV\nVAR_INPUT\n\tXGH            : BOOL;                \t\t // eXternal Position High\n    XGL            : BOOL;                \t\t // eXternal Position Low\n    XH             : BOOL;                \t\t // eXternal Switch to Position High - in automatic mode\n    XL             : BOOL;                \t\t // eXternal Switch to Position Low - in automatic mode\n\tXOH            : BOOL;               \t\t // eXternal Switch to Posistion High - in local/outside mode\n\tXOL            : BOOL;               \t\t // eXternal Switch to Posistion Low - in local/outside mode\n\tXF             : BOOL;                 \t\t // eXternal Fault \n\tLSH            : BOOL;               \t\t // Lock Safeguard High\n\tLSL            : BOOL;               \t\t // Lock Safeguard Low\n\tFSH            : BOOL;                \t\t // Force Safeguarding High\n    FSL            : BOOL;                \t\t // [Priority] Force Safeguarding Low\n    FDH            : BOOL;              \t\t // Force Disable High\n    FDL            : BOOL;             \t\t     // [Priority] Force Disable Low\n\tFB             : BOOL;             \t\t     // Force Block\t\n\tFU             : BOOL;\t\t\t\t\t\t // Force Supression\n\tLA             : BOOL;               \t\t // Set Auto\n\tLM             : BOOL;               \t\t // [Priority 2]Set Manual\n\tLO             : BOOL;               \t\t // [Priority 1]Set Outside\n    //RX             : BOOL;               \t\t // Reset Fault\t\nEND_VAR\n\nVAR_INPUT RETAIN \t\t\t\t\t\t\t\t// \n    PFFD           \t: TIME := T#5S;       \t\t// Feedback failure delay\n    PTDH           \t: TIME := T#5S;        \t  \t// Transit delay low to high\n    PTDL           \t: TIME := T#5S;       \t\t// Transit delay high to low\n    PSTO           \t: BOOL;               \t\t// Output YH and YL  constant on.\n\tPTTO\t\t\t: TIME := T#2000MS;\t\t\t// PULS output open YH\n\tPTTC\t\t\t: TIME := T#2000MS;\t\t\t// PULS output close YL\n\tPAOF\t\t\t: INT  := 0;\t\t\t\t// Parameter action on fault.\n\tPFT\t\t\t\t: INT  := 3;\t\t\t\t// Parameter feedback type\n\tPSUS\t\t\t: INT  := 0;\t\t\t\t// Parameter Template Startup State \n\tPSUM\t\t\t: INT  := 0;\t\t\t\t// Parameter for mode at startup\n\tPSLO\t\t\t: INT  := 0;\t\t\t\t// Parameter for setting local or outside mode\nEND_VAR\n\nVAR_OUTPUT\n\tY              : BOOL;                \t\t// \n\tYH             : BOOL;               \t\t// Normal output to switch control element to high state\n    YL             : BOOL;                \t\t// Normal output to switch control element to low state\n    YF             : BOOL;                \t\t// Control element fault\n    BCH            : BOOL;               \t\t// Binary status confirmed high\n    BCL            : BOOL;                \t\t// Binary status confirmed low\n\tBS             : BOOL;                \t\t// Binary status safeguarding\n\tBB             : BOOL;                \t\t//\n\tBU             : BOOL;               \t\t//\n    BA             : BOOL;               \t\t// Binary status automatic mode\n\tBO             : BOOL;                \t\t// \n   // BM             : Bool := true;        \t// Binary status manual mode    \n   // BD             : Bool;                \t// Binary status disabled\n    YFI            : INT;               \t\t// Fault information\nEND_VAR\n\nVAR RETAIN\n\t\n\tsbBA           \t\t : BOOL;               \t// Binary status automatic mode, RETAINED for prevstate.\n\nEND_VAR\n\n\nVAR\n\tsiState       \t\t : INT;                 // State of controlled element\n    siNextState   \t\t : INT;                 // Next state of controlled element\n\t\n\tsbLA\t\t\t\t: BOOL;\n\tsbLM\t\t\t\t: BOOL;\n\t\n\tOS_FB\t\t\t\t: BOOL;\n\tOS_FU\t\t\t\t: BOOL;\n\tOS_XLM\t\t\t\t: BOOL;\n\tOS_XHM\t\t\t\t: BOOL;\n\t\n\tTimerTransLow\t\t: fbTimer;\n\tTimerTransHigh\t\t: fbTimer;\n\tTimerFeedbackLow\t: fbTimer;\n\tTimerFeedbackHigh\t: fbTimer;\n\tOutputPulsHigh\t\t: TP;\n\tOutputPulsLow\t\t: TP;\n\t\n\t\n\tsbYF            : BOOL;\n\tsbBUpos\t\t\t: BOOL;\n\tsbBUneg\t\t\t: BOOL;\n\t\n\tsiFBlastvalue\t: INT;\nEND_VAR\n\nVAR_TEMP\n\n\ttbHighCommand  \t\t: BOOL;                 // High command\n    tbLowCommand   \t\t: BOOL;                 // Low Command\n\ttbOutsideLocal\t\t: BOOL;\t\t\t\t\t// Interlock of starting object when in local mode\n\t\n\t// INPUTS\n\ttbXGH            : BOOL;                \t// eXternal Position High\n    tbXGL            : BOOL;                \t// eXternal Position Low\n    tbXH             : BOOL;                \t// eXternal Switch to Position High - in automatic mode\n    tbXL             : BOOL;                \t// eXternal Switch to Position Low - in automatic mode\n\ttbXOH            : BOOL;               \t\t//\n\ttbXOL            : BOOL;               \t\t// \n\ttbXF             : BOOL;                 \t// \n\ttbLSH            : BOOL;               \t\t// \n\ttbLSL            : BOOL;               \t\t// \n\ttbFSH            : BOOL;                \t// Force Safeguarding High\n    tbFSL            : BOOL;                \t// [Priority] Force Safeguarding Low\n    tbFDH            : BOOL;              \t\t// Force Disable High\n    tbFDL            : BOOL;             \t\t// [Priority] Force Disable Low\n\ttbFB             : BOOL;             \t\t// \n\ttbFU             : BOOL;\t\t\t\t\t// \n\ttbLA             : BOOL;               \t\t// \n\ttbLM             : BOOL;               \t\t// \n\ttbLO             : BOOL;               \t\t//\n\t\n\t\n\t// OUTPUTS\n\ttbY             : BOOL;                \t\t// \n\ttbYH            : BOOL;               \t\t// Normal output to switch control element to high state\n    tbYL            : BOOL;                \t\t// Normal output to switch control element to low state\n    // Flytta til statisk minne tbYF            : BOOL;                \t\t// Control element fault\n    tbBCH           : BOOL;               \t\t// Binary status confirmed high\n    tbBCL           : BOOL;                \t\t// Binary status confirmed low\n\ttbBS            : BOOL;                \t\t// Binary status safeguarding\n\ttbBB            : BOOL;                \t\t//\n\ttbBU            : BOOL;               \t\t//\n    // Flytta til statisk minne: tbBA            : BOOL;               \t// Binary status automatic mode (\n\ttbBO            : BOOL;                \t\t//\n\ttiYFI\t\t\t:INT;\n\t\nEND_VAR\n\nVAR CONSTANT\n\tciInitState         : INT := 0;             // [FSM] Initial State of Control Element\n    ciLow               : Int := 1;             // [FSM] Control Element in Low state\n    ciTransitHigh       : Int := 2;             // [FSM] Control Element in transit to High state\n    ciHigh              : Int := 3;             // [FSM] Control Element in High state\n    ciTransitLow        : INT := 4;             // [FSM] Control Element in transit to Low state\n\t\n\tciNoFault           : INT;                  // [FAULT] No Fault Indication\n    ciFeedbackFaultHigh : Int := 1;             // [FAULT] Feedback Fault\n    ciFeedbackFaultLow  : Int := 2;             // [FAULT] Feedback Fault\n    ciTransitHighFault  : Int := 3;             // [FAULT] Transit High Fault\n    ciTransitLowFault   : INT := 4;             // [FAULT] Transit Low Fault\n\tciExternalFault\t\t: INT := 5;\t\t\t\t// [FAULT] External fault\n\n\tciNoAction\t\t\t: INT := 0;\n\tciClose\t\t\t\t: INT := 1;\n\tciOpen\t\t\t\t: INT := 2;\n\t\n\tciNoFeedback\t\t: INT := 0;\n\tciHighFeedback\t\t: INT := 1;\n\tciLowFeedback\t\t: INT := 2;\n\tciFullFeedback\t\t: INT := 3;\n\t\n\tciStartupClosed\t\t: INT := 0;\n\tciStartupOpen\t\t: INT := 1;\n\tciStartupFeedback\t: INT := 2;\n\t\n\tciModeStartupManual\t\t: INT := 0;\t\t\t//Sets the mode of the block at startup\n\tciModeStartupAuto\t\t: INT := 1;\t\t\t//Sets the mode of the block at startup\n\tciModeStartupPrev\t\t: INT := 2;\t\t\t//Sets the mode of the block at startup\n\t\n\tciModeLocal\t\t\t\t: INT := 0;\t\t\t// Parameter for setting local mode\n\tciModeOutside\t\t\t: INT := 1;\t\t\t// Parameter for setting outside mode\nEND_VAR\n\n\n\n\n","LineInfoPersistence":"(string)6da30b86-14a4-4bce-bf5d-2bee212317e2_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)900","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}