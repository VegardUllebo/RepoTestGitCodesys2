{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)985d7f59-5de9-45e2-9427-9f306528304d","ParentGuid":"(Guid)7d694963-c4d1-4352-8594-a20401544c44","Name":"(string)MA","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)","LineInfoPersistence":"(string)985d7f59-5de9-45e2-9427-9f306528304d_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK MA\nVAR_INPUT\n\n\t{Analogue input signal FROM process}\n\tX \t\t: REAL; // Normal function input\n\t\n\t{Fault indication FROM outside the template.}\n\tXF \t\t: BOOL; // External Fault\n\t\n\t{Logic input: alarm HH ACTION is blocked as long a input signal is TRUE.}\n\tFBHH \t: BOOL; // Force blocking alarm HH\n\t\n\t{Logic input: alarm LL ACTION is blocked as long as input signal is TRUE.}\t\n\tFBLL\t: BOOL; // Force blocking alarm LL\n\t\n\t{Logic input: alarm HH action and annunciation is suppressed as long as input is true.}\n\tFUHH\t: BOOL; // Force suppression alarm HH\n\t\n\t{Logic input: alarm WH annunciation is suppressed as long as input TRUE. THIS output should normally NOT be used FOR downstream logic.}\n\n\tFUWH\t: BOOL; // Force suppression alarm WH\n\t\n\t{Logic input: alarm WL annunciation is suppressed as long as input TRUE. THIS output should normally NOT be used FOR downstream logic.}\n\tFUWL\t: BOOL; // Force suppression alarm WL\n\t\n\t{Logic input: alarm LL action and annunciation is suppressed as long as input true.}\n\tFULL\t: BOOL; // Force suppression alarm LL\n\t\nEND_VAR\n\nVAR_OUTPUT\n\t{Analogue output signal FROM FUNCTION template}\n\tY\t\t: REAL; // Normal function output\n\t\n\t{YF = 1 IF XF = 1 OR IF an INTERNAL error has been detected in the template OR IF an error is detected on the input X.}\n\tYF\t\t: BOOL; // Function failed\n\t\n\t{TRUE, when X*-value >AHH LIMIT. Subjected TO blocking AND suppression.}\n\tAHH\t\t: BOOL; // Action alarm HH\n\t\n\t{Status alarm annunciation (HH) without blocking logic. Subjected TO suppression}\n\tBHH\t\t: BOOL; // Status alarm HH\n\t\n\t{TRUE, when X*-value >WH LIMIT. Subjected TO suppression. Should NOT be used FOR downstream logic.}\n\tWH\t\t: BOOL; // Warning alarm - WH\n\t\n\t{TRUE, when X*-value <WL LIMIT. Subjected TO suppression. Should NOT be used FOR downstream logic.}\n\tWL\t\t: BOOL; // Warning alarm - WL\n\t\n\t{TRUE, when X*-value <ALL LIMIT. Subjected TO blocking AND suppression.}\n\tALL\t\t: BOOL; // Action alarm LL\n\t\n\t{Status alarm annunciation (LL) without blocking logic. Subjected TO suppression.}\n\tBLL\t\t: BOOL; // Status alarm LL\n\t\n\t{TRUE IF FBHH OR OS blocking is active.}\n\tBBHH\t: BOOL; // Action alarm HH is blocked\n\t\n\t{TRUE IF FBLL OR OS blocking is active}\n\tBBLL\t: BOOL; // Action alarm LL is blocked\n\t\n\t{TRUE IF the template is in suppressed mode (ANY OF the process output FUNCTION is suppressed).}\n\tBU\t\t: BOOL; // Status suppressed\n\t\n\t{TRUE IF the template is in blocked mode (ANY OF the process output functions are blocked).}\n\tBB\t\t: BOOL; // Status blocked\n\t\n\t{TRUE, when X*-value > Event high-high LIMIT No Alarm annunciation, event only}\n\tBXHH\t: BOOL; // Status event HH\n\t\n\t{TRUE, when X-value > Event high LIMIT. No Alarm annunciation, event only}\n\tBXH\t\t: BOOL; // Status event H\n\t\n\t{TRUE, when X-value < Event low LIMIT No Alarm annunciation, event only}\n\tBXL\t\t: BOOL; // Status event L\n\t\n\t{TRUE, when X-value < Event low-low LIMIT No alarm annunciation, event only}\n\tBXLL\t: BOOL; // Status event LL\t\t\nEND_VAR\n\nVAR_STAT RETAIN\n\t{Alarm LIMIT FOR AHH}\n\tPAHH \t: REAL; \t\t// Limit AHH\n\t\n\t{Alarm LIMIT FOR WH}\n\tPWH\t\t: REAL; \t\t// Limit WH\n\t\n\t{Alarm LIMIT FOR WL}\n\tPWL\t\t: REAL; \t\t// Limit WL\n\t\n\t{Alarm LIMIT FOR ALL}\n\tPALL\t: REAL; \t\t// Limit ALL\n\t\n\t{Event LIMIT FOR BXHH}\n\tPBXHH\t: REAL; \t\t// Limit BXHH\n\t\n\t{Event LIMIT FOR BXH}\n\tPBXH\t: REAL; \t\t// Limit BXH\n\t\n\t{Event LIMIT FOR BXL}\n\tPBXL\t: REAL; \t\t// Limit BXL\n\t\n\t{Event LIMIT FOR BXLL}\n\tPBXLL\t: REAL; \t\t// Limit BXLL\n\t\n\t{Delay before alarm AND ACTION is raised afterlimit has been reached.}\n\tPtdA\t: TIME := T#0S; // Time delay action alarm \n\t\n\t{Delay before alarm is raised after LIMIT has been reached.}\n\tPtdW\t: TIME := T#0S; // Time delay warning alarm\n\t\n\t{The hysteresis should be defined in % OF display range, AND be common FOR all limits given BY parameter inputs. The hysteresis shall only affect the RETURN OF alarms/events NOT initiation}\n\tPHy\t\t: REAL := 0.0; \t// Hysteresis value\n\t\n\t{Maximum display range}\n\tPYHR\t: REAL; \t\t// Maximum range\n\t\n\t{Minimum display range}\n\tPYLR\t: REAL; \t\t// Minimum range\n\t\n\t{1 X = Freeze value (last good value)\n\t 2 X = Show current measured value\n\t 3 X = Substitute value}\n\tPEF\t\t: INT := 1;  \t// Fault function\n\t\n\t{Value FOR fall back situation. Only possible TO enter value within range.}\n\tPfbv\t: REAL:= 0.0;\t// Fall back value\n\t\n\t{Threshold value TO avoid calculation when X is close TO zero (Worn out flow transmitters).}\n\tPdb\t\t: REAL:= 0.0; \t// Dead band\n\t\nEND_VAR\n\nVAR\nEND_VAR\n","LineInfoPersistence":"(string)985d7f59-5de9-45e2-9427-9f306528304d_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)816","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}