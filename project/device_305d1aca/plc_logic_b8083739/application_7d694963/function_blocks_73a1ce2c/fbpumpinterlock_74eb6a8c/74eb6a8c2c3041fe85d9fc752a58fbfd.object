{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)74eb6a8c-2c30-41fe-85d9-fc752a58fbfd","ParentGuid":"(Guid)7d694963-c4d1-4352-8594-a20401544c44","Name":"(string)fbPumpInterlock","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)73a1ce2c-6137-4eac-811d-763cf2d3dab4"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)// ***************************************************************************************\n// Copyright: Peter Søreide Skaar, Roar Bøyum, Vegard Aven Ullebø [2024]\n// All rights reserved.\n\n// This code was developed as part of a Bachelor's thesis conducted for Renasys AS \n// and Sunnfjord Kommune. \n\n// Unauthorized reproduction, distribution, or modification of this code, in whole \n// or in part, is strictly prohibited without the express permission of the copyright \n// holder.\n// ***************************************************************************************\n// The code is used to interlock between reactors incase both are in pause sequence.\n// Alternates the output if both inputs are high\n// Else X1=Y1 and X2=Y2\n\n\n\n// Populate temoraries\ntbX1\t\t:= X1;\ntbX2\t\t:= X2;\ntbXF\t\t:= XF;\ntbY1\t\t:= Y1;\ntbY2\t\t:= Y2;\n\nTimer1();\nTimer2();\nTimer1.PTDH := ciTimerT;\nTimer2.PTDH := ciTimerT;\n\n\n\n// Handles if case is outside limits\nIF (siSwapCase > ciOutput2) THEN\n\tsiSwapCase := ciOutput1;\nEND_IF\n\n// Handles if only one input is active\nIF (tbX1 AND NOT tbX2) THEN\n\ttbY1 := TRUE;\nELSE\n\ttbY1 := FALSE;\nEND_IF\n\n// Handles if only one input is active\nIF (tbX2 AND NOT tbX1) THEN\n\ttbY2 := TRUE;\nELSE\n\ttbY2 := FALSE;\nEND_IF\n\n\n\n// Handle Counter\n// Counter increases by 1 each time Y2 goes high\nIF tbX2 AND NOT sbX2 THEN\n\tsiSwapCase := siSwapCase + 1;\nEND_IF\n\n// Counter increases by 1 each time Y1 goes high\nIF tbX1 AND NOT sbX1 THEN\n\tsiSwapCase := siSwapCase + 1;\nEND_IF\n\n// Retrigger posetive edge\nsbX1\t\t\t\t\t\t:= tbX1;\t\n\n// Retrigger posetive edge\nsbX2\t\t\t\t\t\t:= tbX2;\t\n\n\n\n//Check input, starts CASE\nIF (tbX1 AND tbX2) THEN\t\n\n\tCASE siSwapCase OF\n\n\t\tciOutput1: // Statement section case 1 (Only Output Y1)\t\n\t\t\tTimer1.X := TRUE;\n\t\t\ttbY2 := FALSE;\n\t\t\ttbY1 := TRUE;\n\t\n// \t\t\tIF Timer1.Y THEN\t\t\t\t\n// \t\t\t\ttbY2 := FALSE;\n// \t\t\t\ttbY1 := TRUE;\n// \t\t\t\tTimer2.X \t\t\t\t\t:= FALSE;\t\t\n// \t\t\tEND_IF\n\t\t\t\t\t\t\n\n\t\t\t\t\n\t\tciOutput2: // Statement section case 2 (Only Output Y2)\n\t\t\tTimer2.X := TRUE;\n\t\t\ttbY1 := FALSE;\n\t\t\ttbY2 := TRUE;\t\t\t\n// \t\t\tIF Timer2.Y THEN\t\t\t\t\n// \n// \t\t\tTimer1.X \t\t\t\t\t:= FALSE;\t\n// \t\n// \t\t\tEND_IF\n\n\tEND_CASE\nEND_IF\n\n\n\n\n\n// Writing to outputs\nY1\t\t:= tbY1;\nY2\t\t:= tbY2;\nYF\t\t:= tbXF;","LineInfoPersistence":"(string)74eb6a8c-2c30-41fe-85d9-fc752a58fbfd_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK fbPumpInterlock\nVAR_INPUT\n\tX1\t\t\t\t\t: BOOL;\t\t\t// eXternal input1\n\tX2\t\t\t\t\t: BOOL;\t\t\t// eXternal input2\n\tXF\t\t\t\t\t: BOOL;\t\t\t// eXternal fault\nEND_VAR\nVAR_OUTPUT\n\tY1\t\t\t\t\t: BOOL;\t\t\t// Output\n\tY2\t\t\t\t\t: BOOL;\t\t\t// Output\n\tYF\t\t\t\t\t: BOOL;\t\t\t// Output Fault\nEND_VAR\n\nVAR\n\tTimer1\t\t\t\t: fbTimer;\t\t// Timer to hold the output\n\tTimer2\t\t\t\t: fbTimer;\t\t// Timer to hold the output\n\tsbX1\t\t\t\t: BOOL;\t\t\t// Static memory eXternal \n\tsbX2\t\t\t\t: BOOL;\t\t\t// Static memory eXternal \n\tsiSwapCase\t\t    : SINT;\t\t\t// Static int Case\nEND_VAR\n\nVAR_TEMP\n\ttbX1\t\t\t\t: BOOL;\t\t\t// temp eXternal input1\n\ttbX2\t\t\t\t: BOOL;\t\t\t// temp eXternal input2\n\ttbXF\t\t\t\t: BOOL;\t\t\t// eXternal fault\t\t\t\n\ttbY1\t\t\t\t: BOOL;\t\t\t// temp output\n\ttbY2\t\t\t\t: BOOL;\t\t\t// temp output\nEND_VAR\n\nVAR CONSTANT\n\tciOutput1\t\t\t: SINT := 1;\t\t// constant case output 1\n\tciOutput2\t\t\t: SINT := 2;\t\t// constant case output 2\n\tciTimerT\t\t\t: TIME := T#1s;\t\t// Timedelay for output\nEND_VAR","LineInfoPersistence":"(string)74eb6a8c-2c30-41fe-85d9-fc752a58fbfd_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)276","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}