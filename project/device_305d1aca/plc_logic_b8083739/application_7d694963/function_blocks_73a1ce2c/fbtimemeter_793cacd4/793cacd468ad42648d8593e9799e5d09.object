{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)793cacd4-68ad-4264-8d85-93e9799e5d09","ParentGuid":"(Guid)7d694963-c4d1-4352-8594-a20401544c44","Name":"(string)fbTimeMeter","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)73a1ce2c-6137-4eac-811d-763cf2d3dab4"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)// ***************************************************************************************\n// Copyright: Peter Søreide Skaar, Roar Bøyum, Vegard Aven Ullebø [2024]\n// All rights reserved.\n\n// This code was developed as part of a Bachelor's thesis conducted for Renasys AS \n// and Sunnfjord Kommune. \n\n// Unauthorized reproduction, distribution, or modification of this code, in whole \n// or in part, is strictly prohibited without the express permission of the copyright \n// holder.\n// ***************************************************************************************\n\n\n// INPUTS\ntbX \t\t\t\t\t\t\t\t:= X;\n\n// ttNow gets PLC time\nttNow \t\t\t\t\t\t\t\t:= TIME();\t\t\t\t\t\t\t\n\n// ttTime counts the time\nttTimeON \t\t\t\t\t\t\t:= ttNow - stTimeOn;\nttTimeOff \t\t\t\t\t\t\t:= ttNow - stTimeOff;\n\n// OnDelay\nIF tbX THEN\n\tsbDelayBlock \t\t\t\t\t:= FALSE;\n\n\tsbY \t\t\t\t\t\t\t:= TRUE;\n\tOnTime := (ttTimeON-ttTimeOFF);\t\n\nELSE\t\n\tsbDelayBlock \t\t\t\t\t:= TRUE;\n\tstTimeOn  \t\t\t\t\t\t:= ttNow;\nEND_IF;\n\n// OffDelay\nIF NOT tbX AND sbDelayBlock THEN\n\t\n\tsbY \t\t\t\t\t\t\t:= FALSE;\n\t\t\t\t\t\nELSE\n\tstTimeOff  \t\t\t\t\t\t\t:= ttNow;\t\nEND_IF;\n\n// Negativ flank on X, only done once\n\nIF NOT tbX AND sbX THEN\n\tTotalTime := TotalTime + OnTime;\n\t\n\t// Conversion of time from TIME variable to DAYS / HOURS / MINUTES / SECONDS\n\t\n\ttiMillis \t\t:= TIME_TO_LINT(TotalTime);\n\t\n\ttiDays \t\t\t:= tiMillis / cliMillis2Days;\n\ttiRestMillis \t:= tiMillis - (tiDays * CliMillis2Days);\n\t\n\ttiTotTimer\t\t:= tiMillis / cliMillis2Hours;\n\t\n\ttiTimer := tiRestMillis / cliMillis2Hours;\n\ttiRestMillis \t:= tiRestMillis - (tiTimer * CliMillis2Hours);\n\t\n\ttiMinutt := tiRestMillis / cliMillis2Minutes;\n\ttiRestMillis \t:= tiRestMillis - (tiMinutt * CliMillis2Minutes);\n\t\n\ttiSekund := tiRestMillis / cliMillis2Seconds;\n\ttiRestMillis \t:= tiRestMillis - (tiSekund * CliMillis2Seconds);\n\t\n\t\n\t// OUTPUTS\n\tY \t\t\t\t\t\t\t\t\t:= sbY;\n\tY1\t\t\t\t\t\t\t\t\t:= TotalTime;\n\tY2\t\t\t\t\t\t\t\t\t:= LINT_TO_INT(tiDays);\n\tY3\t\t\t\t\t\t\t\t\t:= LINT_TO_INT(tiTimer);\n\tY4\t\t\t\t\t\t\t\t\t:= LINT_TO_INT(tiMinutt);\n\tY5\t\t\t\t\t\t\t\t\t:= LINT_TO_INT(tiSekund);\n\t\nEND_IF\n\n// Negativ flank retrigger\nsbX := tbX;\n\n","LineInfoPersistence":"(string)793cacd4-68ad-4264-8d85-93e9799e5d09_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK fbTimeMeter\nVAR_INPUT\n\tX\t\t\t\t: BOOL;\t\t\t// Normal function input\nEND_VAR\nVAR_OUTPUT\n\tY  \t\t\t\t: BOOL;\t\t\t// Normal function output\t\n\n\tY1\t\t\t\t: TIME;\t\t\t// Total time \n\tY2\t\t\t\t: INT;\t\t\t// Total time devided up into number of days, only whole number\n\tY3\t\t\t\t: INT;\t\t\t// Total time devided up into number of hours, only whole number\n\tY4\t\t\t\t: INT;\t\t\t// Total time devided up into number of minutes, only whole number\n\tY5\t\t\t\t: INT;\t\t\t// Total time devided up into number of seconds, only whole number\nEND_VAR\nVAR\n\tstTimeOn \t\t: TIME;\t\t\t// Call fbTimer\n\tstTimeOff \t\t: TIME;\t\t\t// Call fbTimer\n\tsbDelayBlock    : BOOL;\t\t\t// Static boolean memory to use posetiv/negativ edge detection\n\tsbY\t\t\t\t: BOOL;\t\t\t// Static boolean memory to use posetiv/negativ edge detection\n\tsbX\t\t\t\t: BOOL;\t\t\t// Static boolean memory to use posetiv/negativ edge detection\n\tOnTime\t\t\t: TIME;\t\t\t// Time equipment is on each time\nEND_VAR\nVAR RETAIN\n\tTotalTime\t\t: TIME;\t\t\t// The total time equipment has been one saved with TIME variable\nEND_VAR\n\nVAR_TEMP\n\ttbX\t\t\t\t: BOOL;\t\n\tttNow \t\t\t: TIME;\n\tttTimeOn \t\t: TIME;\n\tttTimeOff \t\t: TIME;\t\n\ttiMillis\t\t: LINT;\n\ttiSekund\t\t: LINT;\n\ttiMinutt\t\t: LINT;\n\ttiTimer\t\t\t: LINT;\n\ttiDays\t\t\t: LINT;\n\ttiTotTimer\t\t: LINT;\n\ttiRestMillis\t: LINT;\nEND_VAR\n\nVAR CONSTANT\n\tcliMillis2Days : LINT := 86400000;\n\tcliMillis2Hours : LINT := 3600000;\n\tcliMillis2Minutes : LINT := 60000;\n\tcliMillis2Seconds : LINT := 1000;\nEND_VAR","LineInfoPersistence":"(string)793cacd4-68ad-4264-8d85-93e9799e5d09_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)1162","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}