{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)985d7f59-5de9-45e2-9427-9f306528304d","ParentGuid":"(Guid)7d694963-c4d1-4352-8594-a20401544c44","Name":"(string)MA","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)fa09a4d9-7515-4dfd-a517-542106323b20"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)// Monitor Analogue blokk designed after IEC PAS 63131:2017.\n\n// ***************************************************************************************\n// Copyright: Peter Søreide Skaar, Roar Bøyum, Vegard Aven Ullebø [2024]\n// All rights reserved.\n\n// This code was developed as part of a Bachelor's thesis conducted for Renasys AS \n// and Sunnfjord Kommune. \n\n// Unauthorized reproduction, distribution, or modification of this code, in whole \n// or in part, is strictly prohibited without the express permission of the copyright \n// holder.\n// ***************************************************************************************\n\n// The MA function template shall be used for scaling, display (indication) and monitoring\n// (alarming) of process variable or control variable. The template comprises handling of field\n// instrument and signaling faults.\n\n\n\n// Initialising temporary variables\n// Handle inputs\n\ntrX \t\t:= X;\ntbXF \t\t:= XF;\ntbFBHH \t\t:= FBHH;\ntbFBLL\t\t:= FBLL;\ntbFUHH\t\t:= FUHH;\ntbFUWH\t\t:= FUWH;\ntbFUWL\t\t:= FUWL;\ntbFULL\t\t:= FULL;\ntbFAHH\t\t:= PAHH;\n\n//Pfbv within range\nIF (PFBV>PYHR) THEN\n\tPFBV := PYHR;\nELSIF (PFBV < PYLR) THEN\n\tPFBV := PYLR;\t\nEND_IF\n\n//PEF witin range\nIF (PEF<1) THEN\n\tPEF := 1;\nELSIF (PEF > 3) THEN\n\tPEF := 1;\t\nEND_IF\n\n//Deadband on X, prescale, 4mA = 5530\nIF ((trX >= crXmin-crXmin*((PDB/100)/2)) AND (trX <= crXmin+crXmin*((PDB/100)/2))) THEN\n\ttrX := crXmin;\nEND_IF\n\n\nTransf(\n\tIN\t\t:= trX , \n\tIN_MIN\t:= crXmin, \n\tIN_MAX\t:= crXmax, \n\tOUT_MIN\t:= PYLR, \n\tOUT_MAX\t:= PYHR, \n\tOUT\t\t=> ScaledX, \n\tERROR\t=> internal_error);\n\n\n\n\n\n\n// Handle fault  \nIF (tbXF OR internal_error OR externalFBerror) AND NOT (tbFUHH) AND NOT (tbFULL) THEN\n\ttbYF := TRUE;\n\tELSE\n\ttbYF := FALSE;\nEND_IF\n\n\n// ACTION HIGH HIGH \nAHHanalougeAlarm(\n\tX    := scaledX, \n\tPL   := tbFAHH, \n\tPTDH := PTDA, \n\tPTDL := T#0S , \n\tPHY  := PHY, \n\tPI   := ciAnalougeHigh , \n\tY    => tbAHH, \n\tYF   => externalFBerror, \n\tBA   => tbBHH);\n\n// Handle suppression Action High High\nIF (tbFUHH OR OS_FUHH) THEN\t\n    tbBHH := FALSE;\n\ttbAHH := FALSE;  \nEND_IF\n\n// Handle block Action high high\nIF (tbFBHH OR OS_FBHH) THEN\n\t\ttbAHH  := FALSE;\n\t\ttbBBHH := TRUE;\t\t\t\nELSE\n    \ttbBBHH := FALSE;\nEND_IF\n\n\n// ACTION LOW LOW  \nALLanalougeAlarm(\n\tX    \t\t\t\t:=scaledX, \n\tPL   \t\t\t\t:= PALL, \n\tPTDH \t\t\t\t:=PTDA, \n\tPTDL \t\t\t\t:=T#0S , \n\tPHY  \t\t\t\t:=PHY, \n\tPI   \t\t\t\t:= ciAnalougeLOW , \n\tY    \t\t\t\t=> tbALL, \n\tYF   \t\t\t\t=> externalFBerror, \n\tBA   \t\t\t\t=> tbBLL);\n\n// Handle suppression Action Low Low\nIF (tbFULL OR OS_FULL) THEN\t\n    tbBLL := FALSE;\n\ttbALL := FALSE;  \nEND_IF\n\n// Handle block Action low low\nIF (tbFBLL OR OS_FBLL) THEN\n\t\ttbALL  := FALSE;\n\t\ttbBBLL := TRUE;\t\t\t\nELSE\n\t\ttbBBLL := FALSE;\t\t\nEND_IF\n\n\n\n// Handle Warning High\nWHanalougeAlarm(\n\tX     \t\t:= scaledX , \n\tPL    \t\t:= PWH, \n\tPTDH\t\t:= PTDW, \n\tPTDL\t\t:= T#0S, \n\tPHY\t\t\t:= PHY, \n\tPI\t\t\t:= ciAnalougeHigh, \n\tY\t\t\t=> tbWH, \n\tYF\t\t\t=> externalFBerror, \n\tBA\t\t\t=> );\n\n// Handle suppression warning high\nIF (tbFUWH OR OS_FUWH) THEN    \n    tbWH := FALSE;\nEND_IF\n\n\n\n\n// Handle Warning LOW\nWLanalougeAlarm(\n\tX\t\t\t\t:= scaledX , \n\tPL\t\t\t\t:= PWL, \n\tPTDH\t\t\t:= PTDW, \n\tPTDL\t\t\t:= T#0S, \n\tPHY\t\t\t\t:= PHY, \n\tPI\t\t\t\t:= ciAnalougeLOW, \n\tY\t\t\t\t=> tbWL, \n\tYF\t\t\t\t=> externalFBerror, \n\tBA\t\t\t\t=> );\n\n\n// Handle supression Warning Low\nIF (tbFUWL OR OS_FUWL)  THEN\n    tbWL := FALSE;\nEND_IF\n\n\n\n// Handle Event High High \nBXHHanalougeAlarm(\n\tX:= scaledX, \n\tPL:= PBXHH, \n\tPTDH:= PTDA, \n\tPTDL:= T#0S, \n\tPHY:= PHY, \n\tPI:= ciAnalougeHIGH, \n\tY=> tbBXHH, \n\tYF=> externalFBerror, \n\tBA=> );\n\n\n\n// Handle Event High \nBXHanalougeAlarm(\n\tX:= scaledX, \n\tPL:= PBXH, \n\tPTDH:= PTDA, \n\tPTDL:= T#0S, \n\tPHY:= PHY, \n\tPI:= ciAnalougeHIGH, \n\tY=> tbBXH, \n\tYF=> externalFBerror, \n\tBA=> );\n\n\n// Handle Event Low Low\nBXLLanalougeAlarm(\n\tX:= scaledX, \n\tPL:= PBXLL, \n\tPTDH:= PTDA, \n\tPTDL:= T#0S, \n\tPHY:= PHY, \n\tPI:= ciAnalougeLOW, \n\tY=> tbBXLL, \n\tYF=> externalFBerror, \n\tBA=> );\n\n\n// Handle Event Low \nBXLanalougeAlarm(\n\tX:= scaledX, \n\tPL:= PBXL, \n\tPTDH:= PTDA, \n\tPTDL:= T#0S, \n\tPHY:= PHY, \n\tPI:= ciAnalougeLOW, \n\tY=> tbBXL, \n\tYF=> externalFBerror, \n\tBA=> );\n\n\n//Handle blocked binary confirmed\nIF (FBHH OR FBLL) THEN\t\n\ttbBB := TRUE;\nELSE\n\ttbBB := FALSE;\nEND_IF\n\n\n//Handle supressed binary confirmed\nIF (FUHH OR FULL OR FUWH OR FUWL) THEN\t\n\ttbBU := TRUE;\n\tELSE\n\ttbBU := FALSE;\nEND_IF\n\n//Handle OS force supression\nIF OS_FBU THEN\t\n\ttbAHH := FALSE;\n\ttbALL := FALSE;\n\ttbWH  := FALSE;\n\ttbWL  := FALSE;\n\ttbYF  := FALSE;\nEND_IF\n\n\n// Handle fault function\nIF (tbYF) THEN\n\t\n\tCASE PEF OF\n\t1: trY := srScaledX_Last_Good;\t\t\t\t\t\t//Freeze last good\n\t\t\n\t2: try := scaledX;\t\t\t\t\t\t\t\t\t//Show current.\n\t\n\t3: trY := PFBV;\t\t\t\t\t\t\t\t\t\t//Substitute value\n\t\n\tEND_CASE;\nELSE\n\t\n\tIF ((scaledX >= PYLR) AND (scaledX <= PYHR)) THEN\t//Set last good\n\t\t\tsrScaledX_Last_Good := scaledX;\n\tEND_IF;\n\ttrY := scaledX;\nEND_IF\n\n\n\n// Writing to outputs\nY \t\t:=\ttrY; \t\t\nYF\t\t:=\ttbYF;\t\t\nAHH\t\t:=\ttbAHH;\t\t\nBHH\t\t:=\ttbBHH;\nWH\t\t:=\ttbWH;\nWL\t\t:=\ttbWL;\nALL\t\t:=\ttbALL;\nBLL\t\t:=\ttbBLL;\nBBHH\t:=\ttbBBHH;\nBBLL\t:=\ttbBBLL;\nBU\t\t:=\ttbBU;\nBB\t\t:=\ttbBB;\nBXHH\t:=\ttbBXHH;\nBXH\t\t:=\ttbBXH;\nBXL\t\t:=\ttbBXL;\nBXLL\t:=\ttbBXLL;","LineInfoPersistence":"(string)985d7f59-5de9-45e2-9427-9f306528304d_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK MA\n\nVAR_INPUT\n\n\tX \t\t\t\t\t: REAL; // Normal function input\n\tXF \t\t\t\t\t: BOOL; // External Fault\n\tFBHH \t\t\t\t: BOOL; // Force blocking alarm HH\n\tFBLL\t\t\t\t: BOOL; // Force blocking alarm LL\n\tFUHH\t\t\t\t: BOOL; // Force suppression alarm HH\n\tFUWH\t\t\t\t: BOOL; // Force suppression alarm WH\n\tFUWL\t\t\t\t: BOOL; // Force suppression alarm WL\n\tFULL\t\t\t\t: BOOL; // Force suppression alarm LL\n\t\nEND_VAR\n\nVAR_OUTPUT\n\tY\t\t\t\t\t: REAL; // Normal function output {Analogue output signal FROM FUNCTION template}\n\tYF\t\t\t\t\t: BOOL; // Function failed {YF = 1 IF XF = 1 OR IF an INTERNAL error has been detected in the template OR IF an error is detected on the input X.}\n\tAHH\t\t\t\t\t: BOOL; // Action alarm HH {TRUE, when X*-value >AHH LIMIT. Subjected TO blocking AND suppression.}\n\tBHH\t\t\t\t\t: BOOL; // Status alarm HH {Status alarm annunciation (HH) without blocking logic. Subjected TO suppression}\n\tWH\t\t\t\t\t: BOOL; // Warning alarm - WH {TRUE, when X*-value >WH LIMIT. Subjected TO suppression. Should NOT be used FOR downstream logic.}\n\tWL\t\t\t\t\t: BOOL; // Warning alarm - WL {TRUE, when X*-value <WL LIMIT. Subjected TO suppression. Should NOT be used FOR downstream logic.}\n\tALL\t\t\t\t\t: BOOL; // Action alarm LL\n\tBLL\t\t\t\t\t: BOOL; // Status alarm LL\n\tBBHH\t\t\t\t: BOOL; // Action alarm HH is blocked\n\tBBLL\t\t\t\t: BOOL; // Action alarm LL is blocked\n\tBU\t\t\t\t\t: BOOL; // Status suppressed\n\tBB\t\t\t\t\t: BOOL; // Status blocked\n\tBXHH\t\t\t\t: BOOL; // Status event HH\n\tBXH\t\t\t\t\t: BOOL; // Status event H\n\tBXL\t\t\t\t\t: BOOL; // Status event L\n\tBXLL\t\t\t\t: BOOL; // Status event LL\t\t\nEND_VAR\n\nVAR\n\tsrScaledX_Last_Good : REAL;\t\t//Stored scaledX last good measure\t\nEND_VAR\n\nVAR_INPUT RETAIN\n\t\n\tPAHH \t\t\t\t: REAL; \t\t// Limit AHH\t\n\tPWH\t\t\t\t\t: REAL; \t\t// Limit WH\n\tPWL\t\t\t\t\t: REAL; \t\t// Limit WL\n\tPALL\t\t\t\t: REAL; \t\t// Limit ALL\n\tPBXHH\t\t\t\t: REAL; \t\t// Limit BXHH\n\tPBXH\t\t\t\t: REAL; \t\t// Limit BXH\n\tPBXL\t\t\t\t: REAL; \t\t// Limit BXL\n\tPBXLL\t\t\t\t: REAL; \t\t// Limit BXLL\n\tPTDA\t\t\t\t: TIME := T#0S; // Time delay action alarm \n\tPTDW\t\t\t\t: TIME := T#0S; // Time delay warning alarm\n\tPHY\t\t\t\t\t: REAL := 0.0; \t// Hysteresis value\n\tPYHR\t\t\t\t: REAL; \t\t// Maximum range\n\tPYLR\t\t\t\t: REAL; \t\t// Minimum range\n\tPEF\t\t\t\t\t: INT := 1;  \t// Fault function\n\tPFBV\t\t\t\t: REAL:= 0.0;\t// Fall back value\n\tPDB\t\t\t\t\t: REAL:= 0.0; \t// Dead band\n\t\nEND_VAR\n\nVAR\n//FunctionBlocks\nAHHanalougeAlarm\t\t: fbAnalougeAlarm;\t\t//FB\nALLanalougeAlarm\t\t: fbAnalougeAlarm;\t\t//FB\nWHanalougeAlarm\t\t\t: fbAnalougeAlarm;\t\t//FB\nWLanalougeAlarm\t\t\t: fbAnalougeAlarm;\t\t//FB\nBXHHanalougeAlarm\t\t: fbAnalougeAlarm;\t\t//FB \nBXHanalougeAlarm\t\t: fbAnalougeAlarm;\t\t//FB \nBXLLanalougeAlarm\t\t: fbAnalougeAlarm;\t\t//FB \nBXLanalougeAlarm\t\t: fbAnalougeAlarm;\t\t//FB \nTransf\t\t\t\t\t: LIN_TRAFO();\t\t\t// Linear transformation\n\n// OS Variavles inputs\nOS_FBHH\t\t\t\t\t: BOOL;\t\t\t\t\t// OS Force Block High High\nOS_FBLL\t\t\t\t\t: BOOL;\t\t\t\t\t// OS Force Block Low Low \nOS_FULL\t\t\t\t\t: BOOL;\t\t\t\t\t// OS force supression low low\nOS_FUHH\t\t\t\t\t: BOOL;\t\t\t\t\t// OS force supression high high\nOS_FUWH\t\t\t\t\t: BOOL;\t\t\t\t\t// OS force supression warning high\nOS_FUWL\t\t\t\t\t: BOOL;\t\t\t\t\t// OS force supression warning low \nOS_FBU\t\t\t\t\t: BOOL;\t\t\t\t\t// OS force supress AHH, ALL, WH, WL, YF\n\n\n// OS Variavles outputs\nOS_AHH\t\t\t\t\t: BOOL;\t\t\t\t\t// OS\nOS_ALL\t\t\t\t\t: BOOL;\t\t\t\t\t// OS\nOS_YF\t\t\t\t\t: BOOL;\t\t\t\t\t// OS\nOS_WH\t\t\t\t\t: BOOL;\t\t\t\t\t// OS\nOS_WL\t\t\t\t\t: BOOL;\t\t\t\t\t// OS\n\nEND_VAR\n\n\nVAR_TEMP\n\t\nScaledX\t\t\t\t\t: REAL;\t\t// Scaled after linear transformation\ninternal_error \t\t\t: BOOL;\t\t// Error in linear transformation\nexternalFBerror\t\t\t: BOOL;\t\t// Error from external function blocks\n\n// Temp variables from inputs\ntrX \t\t\t\t\t: REAL;\t\t// Scaled X\t\ntbXF \t\t\t\t\t: BOOL;\t\t// External fault \ntbFBHH \t\t\t\t\t: BOOL;\t\t// Force block action high high\ntbFBLL\t\t\t\t\t: BOOL;\t\t// Force block action low low\ntbFUHH\t\t\t\t\t: BOOL;\t\t// Force supression action high high\ntbFUWH\t\t\t\t\t: BOOL;\t\t// Force supression warning high\ntbFUWL\t\t\t\t\t: BOOL;\t\t// Force supression warning low\ntbFULL\t\t\t\t\t: BOOL;\t\t// Force supression action low low \ntbFAHH\t\t\t\t\t: REAL;\t\t// Test tbAHH\n\n// Temp variables from outputs.\ntrY\t\t\t\t\t\t: REAL;\t\t// Temp Normal Output\ntbYF\t\t\t\t\t: BOOL;\t\t// Temp Output Fault\ntbAHH\t\t\t\t\t: BOOL;\t\t// Temp Action High High\ntbBHH\t\t\t\t\t: BOOL;\t\t// Temp Blocked High High\ntbWH\t\t\t\t\t: BOOL;\t\t// Temp Warning High\ntbWL\t\t\t\t\t: BOOL;\t\t// Temp warning low\ntbALL\t\t\t\t\t: BOOL;\t\t// Temp Action Low Low\ntbBLL\t\t\t\t\t: BOOL;\t\t// Temp Blocked low low\ntbBBHH\t\t\t\t\t: BOOL;\t\t// Temp blocked confirmed high high\ntbBBLL\t\t\t\t\t: BOOL;\t\t// Temp blocked confirmed low low \ntbBU\t\t\t\t\t: BOOL;\t\t// Temp supressed status\ntbBB\t\t\t\t\t: BOOL;\t\t// Temp blocked status\ntbBXHH\t\t\t\t\t: BOOL;\t\t// Temp event high high\ntbBXH\t\t\t\t\t: BOOL;\t\t// Temp event high\ntbBXL\t\t\t\t\t: BOOL;\t\t// Temp event low \ntbBXLL\t\t\t\t\t: BOOL;\t\t// Temp event low low \n\nEND_VAR\n\nVAR CONSTANT\n\tcrXmin \t\t\t\t: REAL \t\t:= 5530; \n\tcrXmax \t\t\t\t: REAL \t\t:= 32767;\n\tciAnalougeHigh \t\t: SINT \t\t:= 1;\n\tciAnalougeLOW \t\t: SINT\t\t:= 2;\nEND_VAR\n\n\n\n\n\n","LineInfoPersistence":"(string)985d7f59-5de9-45e2-9427-9f306528304d_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)4223","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}