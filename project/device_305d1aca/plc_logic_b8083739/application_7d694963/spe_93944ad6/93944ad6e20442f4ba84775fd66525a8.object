{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)93944ad6-e204-42f4-ba84-775fd66525a8","ParentGuid":"(Guid)7d694963-c4d1-4352-8594-a20401544c44","Name":"(string)SPE","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)// Designed by MangoIPA TEAM\n\n// The SBE function template shall be used for binary (on/off) control of flow element of medium \n// (electricity, heat or fluid). The controlled element is a unit, e.g. motor, pump, heater, fan etc. \n\n\n\n\n\n//Populate Temporaries and preset outputs\n\ntbXGH \t\t\t\t\t\t\t\t:= XGH;                \t\t    // eXternal Position High\ntbXH            \t\t\t\t\t:= XH;                \t\t\t// eXternal Switch to Position High - in automatic mode\ntbXL            \t\t\t\t\t:= XL;                \t\t \t// eXternal Switch to Position Low - in automatic mode\ntbXOH            \t\t\t\t\t:= XOH;               \t\t \t// eXternal Switch to Posistion High - in local/outside mode\ntbXOL            \t\t\t\t\t:= XOL;               \t\t\t// eXternal Switch to Posistion Low - in local/outside mode\ntbXF            \t\t\t\t\t:= XF;                 \t    \t// eXternal Fault \ntbXE            \t\t\t\t\t:= XE;\t\t\t\t\t\t \t// eXternal Enabled\ntbLSH            \t\t\t\t\t:= LSH;               \t\t\t// Lock Safeguard High\ntbLSL            \t\t\t\t\t:= LSL;               \t\t\t// Lock Safeguard Low\ntbFSH            \t\t\t\t\t:= FSH;                \t\t \t// Force Safeguarding High\ntbFSL            \t\t\t\t\t:= FSL;                \t\t\t// [Priority] Force Safeguarding Low\ntbFDH            \t\t\t\t\t:= FDH;              \t\t    // Force Disable High\ntbFDL            \t\t\t\t\t:= FDL;             \t\t    // [Priority] Force Disable Low\ntbFB            \t\t\t\t\t:= FB;             \t\t    \t// Force Block\t\ntbFU            \t\t\t\t\t:= FU;\t\t\t\t\t\t\t// Force Supression\ntbLA            \t\t\t\t\t:= LA;               \t\t\t// Set Auto\ntbLM            \t\t\t\t\t:= LM;        \t\t\t \t\t// [Priority 2]Set Manual\ntbLO            \t\t\t\t\t:= LO;               \t\t\t\t\t\t\t\t // [Priority 1]Set Outside\ntbRX              \t\t\t\t\t:= RX;       \t\t\t\t\t // Reset Fault\t\n\n// Timers\nOutputPulsHigh();\t\t\t\t\t\t\t \t\t\t\t\t\t// TimerPulse lenght YH\nOutputPulsLow ();\t\t\t\t\t\t\t\t\t\t\t\t\t// TimerPulse lenght YL\nTimerFeedback ();\t\t\t\t\t\t\t\t \t\t\t\t\t// Timer no feedback error\nTimerFeedbackLoss();\t\t\t\t\t\t\t \t\t\t\t\t// Timer loss of feedback error\n\n\n//Timer parameters ( should be behind restart funct or init)\nOutputPulsHigh.PT \t\t\t\t\t:= PTTO;\t\t\t\t     \t // TimerPulse lenght YH\nOutputPulsLow.PT\t\t\t\t\t:= PTTC;\t\t\t\t\t     // TimerPulse lenght YL\nTimerFeedback.PTDH\t\t\t\t\t:= PTD;\t\t\t\t\t     \t // Timer no feedback error\nTimerFeedbackLoss.PTDH\t\t\t\t:= PTFD;\t\t\t\t\t\t // Timer loss of feedback error\n\n// Reset FAULT\n\nIF tbRX THEN\n\ttiYFI \t\t\t\t\t\t\t:= ciNoFault;\nEND_IF\n\n\n// MODE CONTROLL\n// Case of PSUS\n// Parameter for Operator Mode Options\nCASE PSUS OF\n\tciOutManAuto: \t\t\t\t\t\t\t\t\t\t\t\t\t// All modes allowed\n\t//\n\t\n\tciManAuto:\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Manuell and auto, no outside\n\t\ttbLO \t\t\t\t\t\t\t:= FALSE;\n\t\n\tciManOut:\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Manuell and outside, no auto\n\t\ttbLA \t\t\t\t\t\t\t:= FALSE;\n\t\n\tciLockedMan:\t\t\t\t\t\t\t\t\t\t\t\t\t// Locked in manuell mode\n\t\ttbLO\t\t\t\t\t\t\t:= FALSE;\n\t\ttbLA\t\t\t\t\t\t\t:= FALSE;\n\t\ttbLM\t\t\t\t\t\t\t:= TRUE;\t\t\n\tciLockedOut:\t\t\t\t\t\t\t\t\t\t\t\t\t// Locked in auto mode.\n\t\ttbLO\t\t\t\t\t\t\t:= FALSE;\n\t\ttbLA\t\t\t\t\t\t\t:= TRUE;\n\t\ttbLM\t\t\t\t\t\t\t:= FALSE;\t\t\n\t\nEND_CASE\n\n//Mode Controll Auto/Man with flank detection posetiv flank!\nIF tbLA AND NOT sbLM  THEN\t\t\t\t\t\t\t\t\t\t\t\n    tbBA                       \t\t\t:= TRUE;\t\t\t\t\t// Manual mode, BA = 0\nEND_IF;\t\t\t\t\t\t\t\t\nIF tbLM AND NOT sbLA THEN\n    tbBA                       \t\t\t:= FALSE; \t    \t\t\t// Auto mode posetive edge,\tBA = 1\nEND_IF;\n\t\nsbLM \t\t\t\t\t\t\t\t\t:= tbLM;\t\t\t\t\t// Retrigger posetive edge for Mode Control.\nsbLA \t\t\t\t\t\t\t\t\t:= tbLA;\t\t\t\t\t// Retrigger posetive edge for Mode Control. \n\n//Mode Controll - Outside/Local\nIF tbLO THEN\t\t\n\ttbBO \t\t\t\t\t\t\t\t:= TRUE;\t\t\t\t\t// Handles status outside, and sets the machine in manuell\n\ttbBA \t\t\t\t\t\t\t\t:= FALSE;\n\t\n\tCASE PSLO OF\t\t\t\t\t\t\t\t\t\t\t\t\t// Case for Parameter for setting local/outside\n\tciLocal:\t\n\t\ttbLocal\t\t\t\t\t\t    := TRUE;\t\t\t\t\t// Switches the state of the block between High and Low in local mode from XGH\n\t\tIF tbXGH THEN\t\n\t\t\ttbHighCommand \t\t\t\t:= TRUE;\n\t\t\ttbLowCommand\t\t\t    := FALSE;\n\t\tEND_IF;\n\t\t\n\t\tIF (NOT tbXGH) THEN\t\t\t\n\t\t\ttbLowCommand\t\t\t    := TRUE;\n\t\t\ttbHighCommand \t\t\t\t:= FALSE;\n\t\tEND_IF\n\t\t\t\t\n\tciOutside: \t\t\t\t\t\t\t\t\t\t\t\t\t\t// If in outside mode, XOH/XOL will controll the statemasjin\n\t\n\t//\n\tEND_CASE\nELSE\n\ttbBO \t\t\t\t\t\t\t\t:= FALSE;\n\ttbLocal \t\t\t\t\t\t\t:= FALSE;\t\t\t\t\t// Moved from IF sentence to fix a bug with not getting out of local mode\t\nEND_IF;\n\n//LOW AND HIGH COMMAND\n//High and low commands evaluation (AUTO & MANUAL & OUTSIDE & LSL & LSH FDL & FDH\nIF (NOT tbLocal) THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Local MODE has Priority\n\ttbLowCommand               \t\t    := (tbXL AND tbBA) OR \t\t\t\t\t\t\t\t\t\t// Auto \n\t\t\t\t\t\t\t\t \t\t   (tbXOL AND NOT tbBA)OR\t\t\t\t \t\t\t\t\t// Manuell\n\t\t\t\t\t\t\t\t \t\t   (tbXOL AND tbBO AND NOT tbLocal);\t\t\t \t\t\t// Outside (Outside not local)\t\n//\t\t\t\t\t\t\t\t \t\t   (tbLSL AND NOT tbFB) OR\t\t\t\t\t\t\t\t\t// Lock Safeguard Low subject by blocking\n//\t\t\t\t\t\t\t\t \t\t   (tbFSL AND NOT tbFB);\t\t\t\t\t\t\t\t\t// Force safeguard Low subject by blocking\n\t\t\t\t\t\t\t\t\t\t\t\t\n\n\ttbHighCommand              \t\t\t:= (tbXH AND tbBA) OR \t\t\t\t\t\t\t\t\t\t// Auto\n\t\t\t\t\t\t\t\t           (tbXOH AND NOT tbBA) OR\t\t\t\t\t\t\t \t\t// Manuell \n\t\t\t\t\t\t\t\t           (tbXOH AND tbBO AND NOT tbLocal);\t\t\t \t\t\t// Outside (Outside not local)\n//\t\t\t\t\t\t\t\t           (tbLSH AND NOT tbFB) OR\t\t\t\t\t\t\t\t\t// Lock Safeguard Low subject by blocking\n//\t\t\t\t\t\t\t\t           (tbFSH AND NOT tbFB);\t\t\t\t\t\t\t\t\t// Force safeguard Low subject by blocking\nEND_IF\n\n//Determine next state\nIF tbHighCommand THEN\n    siNextState              \t\t    := ciHigh;\nELSIF tbLowCommand THEN\n    siNextState              \t\t    := ciLow;\nEnd_If;\n\n//TILSTANDSMASKIN\nCASE siState OF\n\t//INIT STATE\n\tciInitState:\n\t\tCASE PSUM OF\t\t\t\t\t\t\t\t\t\t\t// Sets the case of PSUM / Parameter for Template startup settings\n\t\t\tciManRun:\n\t\t\tsiNextState \t\t\t\t:= ciHigh;\t\t\t\n\t\t\ttbBA\t\t\t\t\t\t:= FALSE;\t\t\t\t// Sets manuall -> tbBA -> false\t\n\t\t\t\t\t\n\t\t\tciManStop:\n\t\t\tsiNextState \t\t\t\t:= ciLow;\t\t\t\t\t\t\t\t\n\t\t\ttbBA\t\t\t\t\t\t:= FALSE;\t\t\t\t// Sets manuall\t\t\t\n\t\t\t\n\t\t\tciAsPrevState:\t\t\n\t\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t// Mangler kode for PrevState\n\t\tEND_CASE\n\t\t\n\t\t//Case for handling next state\n\t\tCASE siNextState OF\n\t\tciHigh: \n\t\t\tsiState\t\t\t\t\t\t:= ciTransitHigh;\n\t\t\t\n\t\tciLow :\t\n\t\t\tsiState \t\t \t\t\t:= ciTransitLow;\t\t\n\tEND_CASE\t\n\t\t\n    ciLow:\n\t// LOW CASE\n\t\tIF (tbXGH) THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Fault timer\n\t\t\tTimerFeedbackLoss.X\t\t\t:= TRUE;\t\t\t\n\t\tELSE\n\t\t\tTimerFeedbackLoss.X\t\t\t:= FALSE;\n\t\tEND_IF\n\t\t\n\t\tIF (TimerFeedbackLoss.Y) THEN\t\t\t\t\t\t\t\t\t\t\t// Handles fault\n\t\t\ttiYFI \t\t\t\t\t\t:= ciFeedbackFaultLow;\n\t\tEND_IF\n\t\t\n\t\tCASE siNextState OF\t\t\t\t\t\t\t\t \t\t\t\t\t\t// Changes states\t\t\t\t\t\t\t\t\t\t\t// Changes state \n            ciHigh :                \n                siState      \t\t \t:= ciTransitHigh;\n        END_CASE;\t\n\t\n\t\n    ciTransitHigh : \t\n\t// TRANSIT TO HIGH STATE\n\t\tOutputPulsHigh.IN\t\t\t\t:= TRUE;\t\t\t\t\t\t\t\t\t\t\t\t\t// Starts timers for pulse and feedback\n\t\tTimerFeedback.X \t\t\t\t:= TRUE;\n\t\tIF tbXGH THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// XGH resets timers\n\t\t\tTimerfeedback.X \t\t    := FALSE;\n\t\t\tsiState \t\t\t\t\t:= ciHigh;\n\t\tEND_IF\n\t\t\n\t\tIF (Timerfeedback.Y) THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Sets FAULT to YFI\n\t\t\ttiYFI\t\t\t\t\t\t:= ciTransitHighFault;\n\t\t\tIF NOT PBXF THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Handles PFXF\n\t\t\t\tsiNextState\t\t\t\t:= ciLow;\t\n\t\t\tEND_IF\n\t\t\t\n\t\tEND_IF\n\t\t\n\t\tCASE siNextState OF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Changes state \n            ciLow :                \n                siState     \t\t    := ciTransitLow;\n        End_Case;\n\t\t\n    ciHigh: \t\n\t// HIGH STATE\n\t\tIF (NOT XGH) THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t// If loss off feedback\n\t\t \tTimerfeedbackLoss.X \t\t:= TRUE;\n\t\t\tIF (TimerfeedbackLOSS.Y) THEN\n\t\t\t\ttiYFI \t\t\t\t\t:= ciFeedbackFaultHigh;\n\t\t\t\tIF NOT PBXF THEN\n\t\t\t\t\tsiNextState \t\t:= ciLow;\t\t\t\t\t\t\t\t\t//Handles PBXF\n\t\t\t\tEND_IF\n\t\t\tEND_IF;\t\n\t\tELSE\n\t\t\tTimerfeedbackloss.X\t\t\t:= FALSE;\n\t\tEND_IF\n\t\t\n        CASE siNextState OF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Changes states \n            ciLow :\n                siState       \t\t  \t:= ciTransitLow;\n        END_CASE;\t\t\n\t\n    ciTransitLow: \n\t//TRANSIT LOW\n\t\tOutputPulsLow.IN \t\t\t\t:= TRUE;\t\t\t\t\t\t\t\t\t// Starts timer for pulse YL\n\t\tTimerFeedback.X \t\t\t\t:= TRUE;\t\t\t\t\t\t\t\t\t// Starts timer for transit \t\t\n\t\n\t\tIF (NOT tbXGH) THEN\n\t\t\tTimerFeedback.X \t\t\t:= FALSE;\t\t\t\t\t\t\t\t\t// Reset timer if feedback\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\tsiState          \t\t\t:= ciLOW;\t\t\t\t\t\t\t\t\t// Transit confirmed\n\t\tEND_IF\n\n\t\tIF (TimerFeedback.Y) THEN\t\t\t\t\t\t\t\t\t\t\t\t\t// Faulthandling if no feedback\n\t\t\ttiYFI\t\t\t\t\t\t:= ciTransitLowFault;\t\n\t\tEND_IF\t\t\n\t\t\n\t\tCASE siNextState OF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Changes states \n            ciHigh :                \n                siState      \t\t \t:= ciTransitHigh;\n        End_Case;\n\t\nEND_CASE\n\n\n//Jobber med case, for å få skallet ferdig, så mode og så safeguarding tenker eg, deretter gå igjennom IEC for å micro-kode og teste.\n//kos - TRANSIT HIGH DONE.\n\n\n// FAULT handling\nsbYF \t\t\t\t\t\t\t\t\t:= (tiYFI > ciNoFault);\n\n\n//Write to output \nY\t\t\t\t\t\t\t\t\t\t:= \t(siState = ciTransitHigh) OR ((siState = ciHigh));\t\t\t\nYH                            \t\t\t:=\tOutputPulsHigh.Q;\nYL                           \t\t\t:= \tOutputPulsLow.Q;\nYF                           \t\t\t:= \t(sbYF);\nYFI\t\t\t\t\t\t\t\t\t\t:=  tiYFI;\nBCH\t\t\t\t\t\t\t\t\t\t:=  (siState = ciHigh);\nBCL\t\t\t\t\t\t\t\t\t\t:=  (siState = ciLow);\nBS\t\t\t\t\t\t\t\t\t\t:=  tbBS;\nBB\t\t\t\t\t\t\t\t\t\t:=  tbBB; \nBU\t\t\t\t\t\t\t\t\t\t:=  tbBU;\nBA\t\t\t\t\t\t\t\t\t\t:=  tbBA; \t\t\nBO\t\t\t\t\t\t\t\t\t\t:=  tbBO; \n\n\n\n\n//Write to HMI\n\n\n\n","LineInfoPersistence":"(string)93944ad6-e204-42f4-ba84-775fd66525a8_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK SPE\nVAR_INPUT \t\n\tXGH             : BOOL;                \t\t // eXternal Position High\n    XH              : BOOL;                \t\t // eXternal Switch to Position High - in automatic mode\n    XL              : BOOL;                \t\t // eXternal Switch to Position Low - in automatic mode\n\tXOH             : BOOL;               \t\t // eXternal Switch to Posistion High - in local/outside mode\n\tXOL             : BOOL;               \t\t // eXternal Switch to Posistion Low - in local/outside mode\n\tXF              : BOOL;                 \t // eXternal Fault \n\tXE\t\t\t    : BOOL;\t\t\t\t\t\t // eXternal Enabled\n\tLSH             : BOOL;               \t\t // Lock Safeguard High\n\tLSL             : BOOL;               \t\t // Lock Safeguard Low\n\tFSH             : BOOL;                \t\t // Force Safeguarding High\n    FSL             : BOOL;                \t\t // [Priority] Force Safeguarding Low\n    FDH             : BOOL;              \t\t // Force Disable High\n    FDL             : BOOL;             \t\t // [Priority] Force Disable Low\n\tFB              : BOOL;             \t\t // Force Block\t\n\tFU              : BOOL;\t\t\t\t\t\t // Force Supression\n\tLA              : BOOL;               \t\t // Set Auto\n\tLM              : BOOL;               \t\t // [Priority 2]Set Manual\n\tLO              : BOOL;               \t\t // [Priority 1]Set Outside\n    RX              : BOOL;               \t\t // Reset Fault\t\nEND_VAR\n\nVAR_INPUT RETAIN \n\tPTD\t\t\t    : TIME := T#2000MS;\t\t\t // Parameter Feedback time failure\t\n\tPTFD\t        : TIME := T#2000MS;\t\t\t // Parameter time before action when loss of feedback\n\tPTTO\t\t\t: TIME := T#2000MS;\t\t\t // PULS output open YH\n\tPTTC\t\t\t: TIME := T#2000MS;\t\t\t // PULS output close YL\n\tPSUM\t\t\t: INT  := 1;\t\t\t\t // Parameter for Template startup settings\n\tPSUS\t\t\t: INT  := 0;\t\t\t\t // Parameter for Operation mode options\n\tPSLO\t\t\t: INT  := 1;\t\t\t\t // Parameter for setting Outside mode type \n\tPBXF\t\t\t: BOOL;\t\t\t\t\t\t // Parameter for action on external fault\n\tPBLF\t\t\t: BOOL;\t\t\t\t\t\t // Parameter for Action on loss of run feedback\n\tPBRE\t\t\t: BOOL;\t\t\t\t\t\t // Parameter for Restart controller options\t\nEND_VAR\n\nVAR_OUTPUT\n\tY               : BOOL;                \t\t // Normal function output.\n\tYH              : BOOL;               \t\t // Normal output to switch control element to high state\n    YL              : BOOL;                \t\t // Normal output to switch control element to low state\n    YF              : BOOL;                \t\t // Control element fault\n\tYFI\t\t\t\t: INT;\t\t\t\t\t\t // Fault Information\n    BCH             : BOOL;               \t\t // Binary status confirmed high\n    BCL             : BOOL;                \t\t // Binary status confirmed low\n    BA              : BOOL;               \t\t // Binary status automatic mode\n\tBO              : BOOL;                \t\t // Binary status outside\n\tBS              : BOOL;                \t\t // Binary status safeguarding\n\tBB              : BOOL;                \t\t // Binary status blocked\n\tBU              : BOOL;               \t\t // Binary status suppressed\n\tBXH\t\t\t    : BOOL;\t\t\t\t\t\t // Status external set high\n\tBXL\t\t\t    : BOOL;\t\t\t\t\t\t // Status external set high\t\nEND_VAR\n\nVAR RETAIN\n\t//VAR RETAIN\nEND_VAR\n\nVAR\n\t\n\tsiState       \t\t: INT;                  // State of controlled element\n    siNextState   \t \t: INT;                  // Next state of controlled element\n\tsbYF\t\t\t\t: BOOL;\t\t\t\t\t// Output fault variable\n\tsbLA\t\t\t\t: BOOL;\t\t\t\t\t// Set auto variable\n\tsbLM\t\t\t\t: BOOL;\t\t\t\t\t// Set manual variable\n\t\n\tOutputPulsHigh\t\t: TP;\t\t\t\t\t// TimerPulse lenght YH\n\tOutputPulsLow\t\t: TP;\t\t\t\t\t// TimerPulse lenght YL\n\tTimerFeedback\t\t: fbTimer;\t\t\t\t// Timer no feedback error\n\tTimerFeedbackLoss\t: fbTimer;\t\t\t\t// Timer loss of feedback error\n\t\n//END_VAR\n\n//VAR_TEMP\n\t//INPUTS\n\ttbXGH             : BOOL;                \t\t // eXternal Position High\n    tbXH              : BOOL;                \t\t // eXternal Switch to Position High - in automatic mode\n    tbXL              : BOOL;                \t\t // eXternal Switch to Position Low - in automatic mode\n\ttbXOH             : BOOL;               \t\t // eXternal Switch to Posistion High - in local/outside mode\n\ttbXOL             : BOOL;               \t\t // eXternal Switch to Posistion Low - in local/outside mode\n\ttbXF              : BOOL;                 \t \t // eXternal Fault \n\ttbXE\t\t\t  : BOOL;\t\t\t\t\t\t // eXternal Enabled\n\ttbLSH             : BOOL;               \t\t // Lock Safeguard High\n\ttbLSL             : BOOL;               \t\t // Lock Safeguard Low\n\ttbFSH             : BOOL;                \t\t // Force Safeguarding High\n    tbFSL             : BOOL;                \t\t // [Priority] Force Safeguarding Low\n    tbFDH             : BOOL;              \t\t     // Force Disable High\n    tbFDL             : BOOL;             \t\t \t // [Priority] Force Disable Low\n\ttbFB              : BOOL;             \t\t\t // Force Block\t\n\ttbFU              : BOOL;\t\t\t\t\t\t // Force Supression\n\ttbLA              : BOOL;               \t\t // Set Auto\n\ttbLM              : BOOL;               \t\t // [Priority 2]Set Manual\n\ttbLO              : BOOL;               \t\t // [Priority 1]Set Outside\n    tbRX              : BOOL;               \t\t // Reset Fault\n   \n   //OUTPUTS\n   \ttbY               : BOOL;                \t\t // Output\n\ttbYH              : BOOL;               \t\t // Normal output to switch control element to high state\n    tbYL              : BOOL;                \t\t // Normal output to switch control element to low state    \n    tbBCH             : BOOL;               \t\t // Binary status confirmed high\n    tbBCL             : BOOL;                \t\t // Binary status confirmed low\n\ttbBS              : BOOL;                \t\t // Binary status safeguarding\n\ttbBB              : BOOL;                \t\t // Binary status blocked\n\ttbBU              : BOOL;               \t\t // Binary status supressed\n\ttbBA              : BOOL;               \t\t // Binary status automatic mode\n\ttbBO              : BOOL;                \t\t // Binary status outside\n\ttiYFI\t\t\t  : INT;\t\t\t\t\t   \t // FAULT REGISTER\n   \n    tbLowCommand\t  : BOOL;\t\t\t\t\t\t // Low Command\n\ttbHighCommand\t  : BOOL;\t\t\t\t\t\t // High Command\n\ttbLocal\t\t\t  : BOOL;\t\t\t\t\t\t // Binary status for local.\n\t\nEND_VAR\n\nVAR CONSTANT\n\t//PSUM\n\tciManRun\t\t\t: INT := 0;\t\t\t\t // [PSUM] Manual and run\n\tciManStop\t\t\t: INT := 1;\t\t\t\t // [PSUM] Manual and stop\n\tciAsPrevState\t\t: INT := 2;\t\t\t\t // [PSUM] As previous state\n\t\n\t//PSUS\n\tciOutManAuto\t\t: INT := 0;\t\t \t\t // [PSUS] Possible to switch between outside, manual and automatic mode\n\tciManAuto\t\t\t: INT := 1;\t\t\t\t // [PSUS] Possible to switch between manual and automatic mode\n\tciManOut  \t\t\t: INT := 2;\t\t\t\t // [PSUS] Possible to switch between manual and outside mode\n\tciLockedMan\t\t\t: INT := 3;\t\t\t\t // [PSUS] Locked in manual mode\n\tciLockedOut\t  \t\t: INT := 4;\t\t\t\t //\t[PSUS] Locked in outside mode\n\t\n\t//PSLO\n\tciOutside\t\t\t: INT := 0;\t\t\t\t // [PSLO] Outside Mode\n\tciLocal\t\t\t\t: INT := 1;\t\t\t\t // [PSLO] Local Mode\n\n\t//TILSTANDSMASKIN\n\tciInitState         : INT := 0;             // [FSM] Initial State of Control Element\n    ciLow               : INT := 1;             // [FSM] Control Element in Low state / stopped\n    ciTransitHigh       : Int := 2;             // [FSM] Control Element in transit to High state\n    ciHigh              : INT := 3;             // [FSM] Control Element in High state / running\n    ciTransitLow        : INT := 4;             // [FSM] Control Element in transit to Low state\n\n\t//FAULT\n\tciNoFault           : INT := 0;             // [FAULT] No Fault Indication\n    ciFeedbackFaultHigh : Int := 1;             // [FAULT] Feedback Fault\n    ciFeedbackFaultLow  : Int := 2;             // [FAULT] Feedback Fault\n    ciTransitHighFault  : INT := 3;             // [FAULT] Transit High Fault, missing feedback\n    ciTransitLowFault   : INT := 4;             // [FAULT] Transit Low Fault, missing feedback\n\tciExternalFault\t\t: INT := 5;\t\t\t\t// [FAULT] External fault\n\tciConflictFault\t\t: INT := 6;\t\t\t\t// [FAULT] Conflict fault (Safeguard and blocking)\n\tciSafeguardFault\t: INT := 7;\t\t\t\t// [FAULT] [Priority] Safeguard fault (No feedback while executing safeguard command)\n\t\t\nEND_VAR","LineInfoPersistence":"(string)93944ad6-e204-42f4-ba84-775fd66525a8_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)526","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}